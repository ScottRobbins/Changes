import ArgumentParser
import Files
import Yams

struct Init: ParsableCommand {
  static var configuration = CommandConfiguration(
    commandName: "init",
    abstract: "Set up repository with a \(Self.configFileName) config file and folder structure."
  )

  private static let configFileName = ".changelog-manager.yml"

  func validate() throws {
    guard Folder.current.containsFile(named: Self.configFileName) == false else {
      throw ValidationError(".changelog-manager.yml already exists.")
    }
  }

  func run() throws {
    let config = ChangelogManagerConfig(files: [
      .init(
        path: "./CHANGELOG.md",
        categories: ["Added", "Changed", "Deprecated", "Removed", "Fixed", "Security"]
      )
    ])

    let encoder = YAMLEncoder()
    let fileString = try encoder.encode(config)
    try Folder.current.createFile(named: Self.configFileName).append(fileString)

    let changelogsFolder = try Folder.current.createSubfolderIfNeeded(withName: ".changelog-manager")
    try changelogsFolder.createSubfolderIfNeeded(withName: "Unreleased")
    try changelogsFolder.createSubfolderIfNeeded(withName: "releases")
    let readmeFile = try changelogsFolder.createFileIfNeeded(at: "README.md")
    try readmeFile.write(readmeTemplate())
  }

  private func readmeTemplate() -> String {
    """
    This file is auto-generated by ChangelogManager. Any modifications made to it will be overwritten.

    # ChangelogManager

    ChangelogManager is a tool used to manage your changelogs. It will store all of your individual
    changelog entries in yml files and then at any time you can re-generate your changelog file(s)
    based on these.

    _Note: Because of this, you do need to check in these files._

    ### Basic Usage
    
    TODO: Add commands
    """
  }
}
